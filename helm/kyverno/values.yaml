# Create PSPs for every component including the CRD install job
global:
  podSecurityStandards:
    enforced: false
  image:
    registry: gsoci.azurecr.io

# Create CiliumNetworkPolicy
ciliumNetworkPolicy:
  enabled: true

# We install CRDs through a Job with the helm specific crd folder.
crds:
  install: true
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 750m
      memory: 1024Mi

image:
  registry: gsoci.azurecr.io
  # Tag for kubectl image
  # repo: giantswarm/kubectl
  tag: 1.28.5

# VerticalPodAutoscaler settings for individual controllers
verticalPodAutoscaler:
  admissionController:
    enabled: true
    containerPolicies: {}
  backgroundController:
    enabled: true
    containerPolicies: {}
  cleanupController:
    enabled: false
    containerPolicies: {}
  reportsController:
    enabled: true
    containerPolicies:
      controlledResources: ["memory"]
  # VPA settings for Policy Reporter components
  kyvernoPlugin:
    enabled: true
    containerPolicies: {}
  policyReporter:
    enabled: true
    containerPolicies: {}
  ui:
    enabled: true
    containerPolicies: {}

policyExceptions:
  # Kyverno will accept PolicyExceptions from all namespaces.
  # If enablePolexPolicy is true, this chart will deploy an additional
  # ClusterPolicy which rejects PolicyException objects created outside
  # of the namespaces listed in allowedPolexNamespaces.
  enablePolexPolicy: true
  allowedPolexNamespaces:
  - policy-exceptions
  # For security reasons, we don't disclose the allowed namespaces when a polex is rejected.
  # The message shown to users can be customized to direct them to an exception process.
  polexPolicyMessage: >-
    PolicyExceptions are not allowed to be created in the {{ request.namespace }} namespace.
    Please contact a cluster administrator for assistance.
  # Deploy a PolicyException for chart-operator (required for Giant Swarm clusters).
  enableChartOperatorPolex: true
  # Deploy a PolicyException for cilium (required for Giant Swarm clusters).
  enableCiliumPolex: true

  # Deploy a ClusterPolicy which prevents other Policies and ClusterPolicies from matching all resource types.
  # Matching all (*) kinds results in excessive and unnecessary admission review load.
  enableWildcardMatchPolicy: true

  # Deploy a ClusterPolicy which prevents other Policies and ClusterPolicies from making API or external service calls for every Pod.
  # Most Pod-level policies shouldn't depend on external calls, and the extra API calls can cause cascading issues under heavy cluster load.
  enableNoisyContextsPolicy: true

  # Deploy a PolicyException for AWS Cloud Controller Manager (required for Giant Swarm clusters).
  enableAwsCloudControllerManagerPolex: true

  # Deploy a PolicyException for AWS Ebs Csi Driver (required for Giant Swarm clusters).
  enableAwsEbsCsiDriverPolex: true

  # Deploy a PolicyException for Azure Cloud Controller Manager (required for Giant Swarm clusters).
  enableAzureCloudControllerManagerPolex: true

  # Deploy a PolicyException for Azure Cloud Node Manager (required for Giant Swarm clusters).
  enableAzureCloudNodeManagerPolex: true

# Upgrade job for Kyverno < 1.10.0 upgrades.
upgradeJob:
  enabled: true

# Additional options defined in charts/kyverno/values.yaml. Upstream docs: https://github.com/kyverno/kyverno
kyverno:
  # Enable upgrade from v2 to v3 chart
  upgrade:
    fromV2: true

  # Create a PSP and ClusterRoleBinding for Kyverno.
  psp:
    enabled: true

  # CRDs configuration
  crds:
    # -- We manage CRDs with an outside job so this needs to be disabled
    install: false

  config:
    # -- Exclude Kyverno namespace
    # Determines if default Kyverno namespace exclusion is enabled for webhooks and resourceFilters
    excludeKyvernoNamespace: true

    # -- Enable registry mutation for container images. Enabled by default.
    enableDefaultRegistryMutation: true

    # -- The registry hostname used for the image mutation.
    defaultRegistry: docker.io

    # -- Defines the `namespaceSelector` in the webhook configurations.
    # Note that it takes a list of `namespaceSelector` and/or `objectSelector` in the JSON format, and only the first element
    # will be forwarded to the webhook configurations.
    # The Kyverno namespace is excluded if `excludeKyvernoNamespace` is `true` (default)
    webhooks:
      - namespaceSelector:
          matchExpressions:
          - key: kubernetes.io/metadata.name
            operator: NotIn
            values:
              - kube-system

  features:
    admissionReports:
      # -- Enables the feature
      enabled: true
    autoUpdateWebhooks:
      # -- Enables the feature
      enabled: true
    backgroundScan:
      # -- Enables the feature
      enabled: true
      # -- Number of background scan workers
      backgroundScanWorkers: 2
      # -- Background scan interval
      backgroundScanInterval: 1h
      # -- Skips resource filters in background scan
      skipResourceFilters: true
    configMapCaching:
      # -- Enables the feature
      enabled: true
    deferredLoading:
      # -- Enables the feature
      enabled: true
    dumpPayload:
      # -- Enables the feature
      enabled: false
    forceFailurePolicyIgnore:
      # -- Enables the feature
      enabled: false
    logging:
      # -- Logging format
      format: text
      # -- Logging verbosity
      verbosity: 2
    omitEvents:
      # -- Events which should not be emitted (possible values `PolicyViolation`, `PolicyApplied`, `PolicyError`, and `PolicySkipped`)
      eventTypes:
        - PolicyApplied
        - PolicyError
        - PolicySkipped
        # - PolicyViolation
    policyExceptions:
      # -- Enables the feature
      enabled: true
      # -- Restrict policy exceptions to a single namespace
      namespace: ''
    protectManagedResources:
      # -- Enables the feature
      enabled: false
    registryClient:
      # -- Allow insecure registry
      allowInsecure: false
      # -- Enable registry client helpers
      credentialHelpers:
      - default
      - google
      - amazon
      - azure
      - github
    reports:
      # -- Reports chunk size
      chunkSize: 1000

  customLabels:
    giantswarm.io/service-type: "managed"
    giantswarm.io/monitoring_basic_sli: "true"
    application.giantswarm.io/team: "shield"

  # Cleanup cronjobs to prevent internal resources from stacking up in the cluster
  cleanupJobs:

    admissionReports:

      # -- Enable cleanup cronjob
      enabled: true

      image:
        # -- (string) Image registry
        registry: gsoci.azurecr.io
        # -- Image repository
        repository: giantswarm/kubectl
        # -- Image tag
        # Defaults to `latest` if omitted
        tag: '1.29.1'
        # -- (string) Image pull policy
        # Defaults to image.pullPolicy if omitted
        pullPolicy: IfNotPresent

      # -- Cronjob schedule
      schedule: '*/10 * * * *'

      # -- Reports threshold, if number of reports are above this value the cronjob will start deleting them
      threshold: 10000

      # -- Cronjob history
      history:
        success: 1
        failure: 1

      # -- Security context for the pod
      podSecurityContext:
        runAsUser: 65534
        runAsGroup: 65534

      # -- Security context for the containers
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault

      # -- Labels for the CleanupJob
      podLabels:
        app.kubernetes.io/component: cleanup-jobs
        app.kubernetes.io/instance: kyverno

    clusterAdmissionReports:

      # -- Enable cleanup cronjob
      enabled: true

      image:
        # -- (string) Image registry
        registry: gsoci.azurecr.io
        # -- Image repository
        repository: giantswarm/kubectl
        # -- Image tag
        # Defaults to `latest` if omitted
        # repo: giantswarm/kubectl
        tag: '1.29.1'
        # -- (string) Image pull policy
        # Defaults to image.pullPolicy if omitted
        pullPolicy: IfNotPresent

      # -- Cronjob schedule
      schedule: '*/10 * * * *'

      # -- Reports threshold, if number of reports are above this value the cronjob will start deleting them
      threshold: 10000

      # -- Cronjob history
      history:
        success: 1
        failure: 1

      # -- Security context for the pod
      podSecurityContext:
        runAsUser: 65534
        runAsGroup: 65534

      # -- Security context for the cont
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault

      # -- Labels for the CleanupJob
      podLabels:
        app.kubernetes.io/component: cleanup-jobs
        app.kubernetes.io/instance: kyverno

  # Admission controller configuration
  admissionController:

    # -- Overrides features defined at the root level
    featuresOverride: {}

    rbac:
      # -- Create RBAC resources
      create: true

      serviceAccount:
        # -- The ServiceAccount name
        name: "kyverno-admission-controller"

        # -- Annotations for the ServiceAccount
        annotations: {}
          # example.com/annotation: value

      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources: []
        # - apiGroups:
        #     - ''
        #   resources:
        #     - pods
        #   verbs:
        #     - create
        #     - update
        #     - delete

    # -- Create self-signed certificates at deployment time.
    # The certificates won't be automatically renewed if this is set to `true`.
    createSelfSignedCert: false

    # -- (int) Desired number of pods
    replicas: 3

    # -- Additional labels to add to each pod
    podLabels:
      app.kubernetes.io/name: kyverno

    # -- Additional annotations to add to each pod
    podAnnotations: {}
      # example.com/annotation: foo

    # -- Deployment update strategy.
    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    # @default -- See [values.yaml](values.yaml)
    updateStrategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 40%
      type: RollingUpdate

    # -- Optional priority class
    priorityClassName: 'giantswarm-critical'

    # -- Change `apiPriorityAndFairness` to `true` if you want to insulate the API calls made by Kyverno admission controller activities.
    # This will help ensure Kyverno stability in busy clusters.
    # Ref: https://kubernetes.io/docs/concepts/cluster-administration/flow-control/
    apiPriorityAndFairness: true

    # -- Node labels for pod assignment
    nodeSelector: {}

    # -- List of node taints to tolerate
    tolerations: []

    antiAffinity:
      # -- Pod antiAffinities toggle.
      # Enabled by default but can be disabled if you want to schedule pods to the same node.
      enabled: true

    # -- Pod anti affinity constraints.
    # @default -- See [values.yaml](values.yaml)
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - admission-controller
            topologyKey: kubernetes.io/hostname

    # -- Pod affinity constraints.
    podAffinity: {}

    # -- Node affinity constraints.
    nodeAffinity: {}

    # -- Topology spread constraints.
    topologySpreadConstraints: []

    # -- Security context for the pod
    podSecurityContext: {}

    podDisruptionBudget:
      # -- Configures the minimum available pods for disruptions.
      # Cannot be used if `maxUnavailable` is set.
      minAvailable: 1
      # -- Configures the maximum unavailable pods for disruptions.
      # Cannot be used if `minAvailable` is set.
      # maxUnavailable:

    # -- A writable volume to use for the TUF root initialization.
    tufRootMountPath: /.sigstore

    # -- Volume to be mounted in pods for TUF/cosign work.
    sigstoreVolume:
      emptyDir: {}

    # -- Image pull secrets
    imagePullSecrets: []
      # - secretName

    initContainer:

      image:
        # -- Image registry
        registry: gsoci.azurecr.io
        # -- Image repository
        repository: giantswarm/kyvernopre

      resources:
        # -- Pod resource limits
        limits:
          cpu: 100m
          memory: 256Mi
        # -- Pod resource requests
        requests:
          cpu: 10m
          memory: 64Mi

      # -- Container security context
      securityContext:
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault

      # -- Additional container args.
      extraArgs: {}

      # -- Additional container environment variables.
      extraEnvVars: []

    container:

      image:
        # -- Image registry
        registry: gsoci.azurecr.io
        # -- Image repository
        repository: giantswarm/kyverno
        # -- Image pull policy
        pullPolicy: IfNotPresent

      resources:
        # -- Pod resource limits
        limits:
          memory: 384Mi
        # -- Pod resource requests
        requests:
          cpu: 100m
          memory: 128Mi

      # -- Container security context
      securityContext:
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault

      # -- Additional container args.
      extraArgs: {}

      # -- Additional container environment variables.
      extraEnvVars: []

    # -- Array of extra init containers
    extraInitContainers: []
      # - name: init-container
      #   image: busybox
      #   command: ['sh', '-c', 'echo Hello']

    # -- Array of extra containers to run alongside kyverno
    extraContainers: []
      # - name: myapp-container
      #   image: busybox
      #   command: ['sh', '-c', 'echo Hello && sleep 3600']

    service:
      # -- Service port.
      port: 443
      # -- Service type.
      type: ClusterIP
      # -- Service node port.
      # Only used if `type` is `NodePort`.
      # nodePort:
      # -- Service annotations.
      annotations: {}

    metricsService:
      # -- Create service.
      create: true
      # -- Service port.
      # Kyverno's metrics server will be exposed at this port.
      port: 8000
      # -- Service type.
      type: ClusterIP
      # -- Service node port.
      # Only used if `type` is `NodePort`.
      # nodePort:
      # -- Service annotations.
      annotations: {}

    networkPolicy:
      # -- When true, use a NetworkPolicy to allow ingress to the webhook
      # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
      enabled: false
      # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
      ingressFrom: []

    serviceMonitor:
      # -- Create a `ServiceMonitor` to collect Prometheus metrics.
      enabled: true
      # -- Additional labels
      additionalLabels: {}
      # -- (string) Override namespace
      # namespace: ~
      # --  Interval to scrape metrics
      interval: 30s
      # -- Timeout if metrics can't be retrieved in given time interval
      scrapeTimeout: 25s
      # -- Is TLS required for endpoint
      secure: false
      # -- TLS Configuration for endpoint
      tlsConfig: {}

    logging:
      # -- Logging format
      format: text
      # -- Logging verbosity
      verbosity: 2

  # Background controller configuration
  backgroundController:

    # -- Overrides features defined at the root level
    featuresOverride: {}

    # -- Enable background controller.
    enabled: true

    rbac:
      # -- Create RBAC resources
      create: true

      serviceAccount:
        # -- Service account name
        name: "kyverno-background-controller"

        # -- Annotations for the ServiceAccount
        annotations: {}
          # example.com/annotation: value

      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources: []
        # - apiGroups:
        #     - ''
        #   resources:
        #     - pods

    image:
      # -- (string) Image registry
      registry: gsoci.azurecr.io
      # -- Image repository
      repository: giantswarm/background-controller
      # -- Image pull policy
      pullPolicy: IfNotPresent

    # -- Image pull secrets
    imagePullSecrets: []
      # - secretName

    # -- (int) Desired number of pods
    # replicas: ~

    # -- Deployment update strategy.
    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    # @default -- See [values.yaml](values.yaml)
    updateStrategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 40%
      type: RollingUpdate

    # -- Optional priority class
    priorityClassName: 'giantswarm-critical'

    # -- Change `hostNetwork` to `true` when you want the pod to share its host's network namespace.
    # Useful for situations like when you end up dealing with a custom CNI over Amazon EKS.
    # Update the `dnsPolicy` accordingly as well to suit the host network mode.
    hostNetwork: false

    # -- `dnsPolicy` determines the manner in which DNS resolution happens in the cluster.
    # In case of `hostNetwork: true`, usually, the `dnsPolicy` is suitable to be `ClusterFirstWithHostNet`.
    # For further reference: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy.
    dnsPolicy: ClusterFirst

    # -- Extra arguments passed to the container on the command line
    extraArgs: {}

    resources:
      # -- Pod resource limits
      limits:
        memory: 128Mi
      # -- Pod resource requests
      requests:
        cpu: 100m
        memory: 64Mi

    # -- Node labels for pod assignment
    nodeSelector: {}

    # -- List of node taints to tolerate
    tolerations: []

    antiAffinity:
      # -- Pod antiAffinities toggle.
      # Enabled by default but can be disabled if you want to schedule pods to the same node.
      enabled: true

    # -- Pod anti affinity constraints.
    # @default -- See [values.yaml](values.yaml)
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - background-controller
            topologyKey: kubernetes.io/hostname

    # -- Pod affinity constraints.
    podAffinity: {}

    # -- Node affinity constraints.
    nodeAffinity: {}

    # -- Topology spread constraints.
    topologySpreadConstraints: []

    # -- Security context for the pod
    podSecurityContext: {}

    # -- Security context for the containers
    securityContext:
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault

    podDisruptionBudget:
      # -- Configures the minimum available pods for disruptions.
      # Cannot be used if `maxUnavailable` is set.
      minAvailable: 1
      # -- Configures the maximum unavailable pods for disruptions.
      # Cannot be used if `minAvailable` is set.
      # maxUnavailable:

    metricsService:
      # -- Create service.
      create: true
      # -- Service port.
      # Metrics server will be exposed at this port.
      port: 8000
      # -- Service type.
      type: ClusterIP
      # -- Service node port.
      # Only used if `metricsService.type` is `NodePort`.
      # nodePort:
      # -- Service annotations.
      annotations: {}

    networkPolicy:

      # -- When true, use a NetworkPolicy to allow ingress to the webhook
      # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
      enabled: false

      # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
      ingressFrom: []

    serviceMonitor:
      # -- Create a `ServiceMonitor` to collect Prometheus metrics.
      enabled: true
      # -- Additional labels
      additionalLabels: {}
      # -- (string) Override namespace
      # namespace: ~
      # --  Interval to scrape metrics
      interval: 30s
      # -- Timeout if metrics can't be retrieved in given time interval
      scrapeTimeout: 25s
      # -- Is TLS required for endpoint
      secure: false
      # -- TLS Configuration for endpoint
      tlsConfig: {}

    logging:
      # -- Logging format
      format: text
      # -- Logging verbosity
      verbosity: 2

  # Cleanup controller configuration
  cleanupController:

    # -- Overrides features defined at the root level
    featuresOverride: {}

    # -- Enable cleanup controller.
    enabled: false

    rbac:
      # -- Create RBAC resources
      create: true

      serviceAccount:
        # -- Service account name
        name: "kyverno-cleanup-controller"

        # -- Annotations for the ServiceAccount
        annotations: {}
          # example.com/annotation: value

      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources: []
        # - apiGroups:
        #     - ''
        #   resources:
        #     - pods

    # -- Create self-signed certificates at deployment time.
    # The certificates won't be automatically renewed if this is set to `true`.
    createSelfSignedCert: false

    image:
      # -- Image registry
      registry: gsoci.azurecr.io
      # -- Image repository
      repository: giantswarm/cleanup-controller
      # -- Image pull policy
      pullPolicy: IfNotPresent

    # -- Image pull secrets
    imagePullSecrets: []
      # - secretName

    # -- (int) Desired number of pods
    # replicas: ~

    # -- Deployment update strategy.
    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    # @default -- See [values.yaml](values.yaml)
    updateStrategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 40%
      type: RollingUpdate

    # -- Optional priority class
    priorityClassName: 'giantswarm-critical'

    # -- Change `hostNetwork` to `true` when you want the pod to share its host's network namespace.
    # Useful for situations like when you end up dealing with a custom CNI over Amazon EKS.
    # Update the `dnsPolicy` accordingly as well to suit the host network mode.
    hostNetwork: false

    # -- `dnsPolicy` determines the manner in which DNS resolution happens in the cluster.
    # In case of `hostNetwork: true`, usually, the `dnsPolicy` is suitable to be `ClusterFirstWithHostNet`.
    # For further reference: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy.
    dnsPolicy: ClusterFirst

    # -- Extra arguments passed to the container on the command line
    extraArgs: {}

    resources:
      # -- Pod resource limits
      limits:
        memory: 128Mi
      # -- Pod resource requests
      requests:
        cpu: 100m
        memory: 64Mi

    # -- Node labels for pod assignment
    nodeSelector: {}

    # -- List of node taints to tolerate
    tolerations: []

    antiAffinity:
      # -- Pod antiAffinities toggle.
      # Enabled by default but can be disabled if you want to schedule pods to the same node.
      enabled: true

    # -- Pod anti affinity constraints.
    # @default -- See [values.yaml](values.yaml)
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - cleanup-controller
            topologyKey: kubernetes.io/hostname

    # -- Pod affinity constraints.
    podAffinity: {}

    # -- Node affinity constraints.
    nodeAffinity: {}

    # -- Topology spread constraints.
    topologySpreadConstraints: []

    # -- Security context for the pod
    podSecurityContext: {}

    # -- Security context for the containers
    securityContext:
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault

    podDisruptionBudget:
      # -- Configures the minimum available pods for disruptions.
      # Cannot be used if `maxUnavailable` is set.
      minAvailable: 1
      # -- Configures the maximum unavailable pods for disruptions.
      # Cannot be used if `minAvailable` is set.
      # maxUnavailable:

    service:
      # -- Service port.
      port: 443
      # -- Service type.
      type: ClusterIP
      # -- Service node port.
      # Only used if `service.type` is `NodePort`.
      # nodePort:
      # -- Service annotations.
      annotations: {}

    metricsService:
      # -- Create service.
      create: true
      # -- Service port.
      # Metrics server will be exposed at this port.
      port: 8000
      # -- Service type.
      type: ClusterIP
      # -- Service node port.
      # Only used if `metricsService.type` is `NodePort`.
      # nodePort:
      # -- Service annotations.
      annotations: {}

    networkPolicy:

      # -- When true, use a NetworkPolicy to allow ingress to the webhook
      # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
      enabled: false

      # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
      ingressFrom: []

    serviceMonitor:
      # -- Create a `ServiceMonitor` to collect Prometheus metrics.
      enabled: true
      # -- Additional labels
      additionalLabels: {}
      # -- (string) Override namespace
      # namespace: ~
      # --  Interval to scrape metrics
      interval: 30s
      # -- Timeout if metrics can't be retrieved in given time interval
      scrapeTimeout: 25s
      # -- Is TLS required for endpoint
      secure: false
      # -- TLS Configuration for endpoint
      tlsConfig: {}

    logging:
      # -- Logging format
      format: text
      # -- Logging verbosity
      verbosity: 2

  # Reports controller configuration
  reportsController:

    # -- Overrides features defined at the root level
    featuresOverride: {}

    # -- Enable reports controller.
    enabled: true

    rbac:
      # -- Create RBAC resources
      create: true

      serviceAccount:
        # -- Service account name
        name: "kyverno-reports-controller"

        # -- Annotations for the ServiceAccount
        annotations: {}
          # example.com/annotation: value

      clusterRole:
        # -- Extra resource permissions to add in the cluster role
        extraResources: []
        # - apiGroups:
        #     - ''
        #   resources:
        #     - pods

    image:
      # -- Image registry
      registry: gsoci.azurecr.io
      # -- Image repository
      repository: giantswarm/reports-controller
      # -- Image pull policy
      pullPolicy: IfNotPresent

    # -- Image pull secrets
    imagePullSecrets: []
      # - secretName

    # -- (int) Desired number of pods
    # replicas: ~

    # -- Deployment update strategy.
    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    # @default -- See [values.yaml](values.yaml)
    updateStrategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 40%
      type: RollingUpdate

    # -- Optional priority class
    priorityClassName: 'giantswarm-critical'

    # -- Change `apiPriorityAndFairness` to `true` if you want to insulate the API calls made by Kyverno reports controller activities.
    # This will help ensure Kyverno reports stability in busy clusters.
    # Ref: https://kubernetes.io/docs/concepts/cluster-administration/flow-control/
    apiPriorityAndFairness: true

    # -- Change `hostNetwork` to `true` when you want the pod to share its host's network namespace.
    # Useful for situations like when you end up dealing with a custom CNI over Amazon EKS.
    # Update the `dnsPolicy` accordingly as well to suit the host network mode.
    hostNetwork: false

    # -- `dnsPolicy` determines the manner in which DNS resolution happens in the cluster.
    # In case of `hostNetwork: true`, usually, the `dnsPolicy` is suitable to be `ClusterFirstWithHostNet`.
    # For further reference: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy.
    dnsPolicy: ClusterFirst

    # -- Extra arguments passed to the container on the command line
    extraArgs: {}

    resources:
      # -- Pod resource limits
      limits:
        memory: 128Mi
      # -- Pod resource requests
      requests:
        cpu: 100m
        memory: 64Mi

    # -- Node labels for pod assignment
    nodeSelector: {}

    # -- List of node taints to tolerate
    tolerations: []

    antiAffinity:
      # -- Pod antiAffinities toggle.
      # Enabled by default but can be disabled if you want to schedule pods to the same node.
      enabled: true

    # -- Pod anti affinity constraints.
    # @default -- See [values.yaml](values.yaml)
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - reports-controller
            topologyKey: kubernetes.io/hostname

    # -- Pod affinity constraints.
    podAffinity: {}

    # -- Node affinity constraints.
    nodeAffinity: {}

    # -- Topology spread constraints.
    topologySpreadConstraints: []

    # -- Security context for the pod
    podSecurityContext: {}

    # -- Security context for the containers
    securityContext:
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault

    podDisruptionBudget:
      # -- Configures the minimum available pods for disruptions.
      # Cannot be used if `maxUnavailable` is set.
      minAvailable: 1
      # -- Configures the maximum unavailable pods for disruptions.
      # Cannot be used if `minAvailable` is set.
      # maxUnavailable:

    # -- A writable volume to use for the TUF root initialization.
    tufRootMountPath: /.sigstore

    # -- Volume to be mounted in pods for TUF/cosign work.
    sigstoreVolume:
      emptyDir: {}

    metricsService:
      # -- Create service.
      create: true
      # -- Service port.
      # Metrics server will be exposed at this port.
      port: 8000
      # -- Service type.
      type: ClusterIP
      # -- (string) Service node port.
      # Only used if `type` is `NodePort`.
      # nodePort: ~
      # -- Service annotations.
      annotations: {}

    networkPolicy:

      # -- When true, use a NetworkPolicy to allow ingress to the webhook
      # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
      enabled: false

      # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
      ingressFrom: []

    serviceMonitor:
      # -- Create a `ServiceMonitor` to collect Prometheus metrics.
      enabled: true
      # -- Additional labels
      additionalLabels: {}
      # -- (string) Override namespace
      # namespace: ~
      # -- Interval to scrape metrics
      interval: 30s
      # -- Timeout if metrics can't be retrieved in given time interval
      scrapeTimeout: 25s
      # -- Is TLS required for endpoint
      secure: false
      # -- TLS Configuration for endpoint
      tlsConfig: {}

    logging:
      # -- Logging format
      format: text
      # -- Logging verbosity
      verbosity: 2

  policyReportsCleanup:
    image:
      # -- (string) Image registry
      registry: gsoci.azurecr.io
      # -- Image repository
      repository: giantswarm/kubectl

  webhooksCleanup:
    image:
      # -- (string) Image registry
      registry: gsoci.azurecr.io
      # -- Image repository
      repository: giantswarm/kubectl

# Additional options defined in charts/policy-reporter/values.yaml. Upstream docs: https://github.com/kyverno/policy-reporter
policy-reporter:
  podLabels:
    app.kubernetes.io/component: policy-reporter
  image:
    registry: gsoci.azurecr.io
    repository: giantswarm/policy-reporter
  resources:
    limits:
      cpu: 30m
      memory: 100Mi
    requests:
      cpu: 5m
      memory: 30Mi
  serviceAccount:
    name: "policyreporter-sa"  # Only needed to support adding a PSP. Can be removed when PSPs are disabled.

  ui:
    enabled: true
    podLabels:
      app.kubernetes.io/component: ui
    image:
      registry: gsoci.azurecr.io
      repository: giantswarm/policy-reporter-ui
    plugins:
      kyverno: true
    resources:
      limits:
        cpu: 10m
        memory: 16Mi
      requests:
        cpu: 1m
        memory: 8Mi
    serviceAccount:
      create: true
      name: "policyreporter-ui-sa"  # Only needed to support adding a PSP. Can be removed when PSPs are disabled.

  kyvernoPlugin:
    enabled: true
    annotations: {}
    podLabels:
      app.kubernetes.io/component: plugin
    image:
      registry: gsoci.azurecr.io
      repository: giantswarm/policy-reporter-kyverno-plugin
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 30Mi
    serviceAccount:
      name: "policyreporter-plugin-sa"  # Only needed to support adding a PSP. Can be removed when PSPs are disabled.

  global:
    plugins:
      kyverno: true

    labels: {}

  monitoring:
    enabled: true
    namespace: kyverno

  # Create a PSP and ClusterRoleBinding for PolicyReporter.
  psp:
    enabled: true
